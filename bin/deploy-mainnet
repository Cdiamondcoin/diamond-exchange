#!/usr/bin/env bash
### deploy -- command-line interface to deploy Dpass contract
### Usage: deploy

### Before using deploy, you should copy the keystore file from your keystore to current directory. See:
### geth - https://github.com/ethereum/go-ethereum/wiki/Backup-&-restore
### parity - https://ethereum.stackexchange.com/questions/6471/where-are-my-keys-and-chain-data-located-if-i-am-using-parity

set -x

## Settings for test networks like Rinkeby, Kovan, Ropsten

## Internal settings (do not touch these unless you know what you are doing!!)
export $(grep -v '^#' .env | xargs)
export ETH_RPC_PORT=${ETH_RPC_PORT:-"8545"}
export ETH_KEYSTORE="$(pwd)"

export SOLC_FLAGS="--optimize"
export ETH_GAS=9965875

# 1000000000 wei = 1 gwei
export ETH_GAS_PRICE=20000000000

dapp build --extract

hevm flatten --source-file lib/ds-token/src/token.sol --json-file out/dapp.sol.json > out/DSToken-flatt.sol
hevm flatten --source-file src/DiamondExchange.t.sol --json-file out/dapp.sol.json > out/TestFeedLike-flatt.sol
hevm flatten --source-file src/Liquidity.sol --json-file out/dapp.sol.json > out/Liquidity-flatt.sol
hevm flatten --source-file src/Wallet.sol --json-file out/dapp.sol.json > out/Wallet-flatt.sol
hevm flatten --source-file src/Burner.sol --json-file out/dapp.sol.json > out/Burner-flatt.sol
hevm flatten --source-file src/Dcdc.sol --json-file out/dapp.sol.json > out/Dcdc-flatt.sol
hevm flatten --source-file src/CdcAuthority.sol --json-file out/dapp.sol.json > out/CdcAuthority-flatt.sol
hevm flatten --source-file src/DiamondExchange.sol --json-file out/dapp.sol.json > out/DiamondExchange-flatt.sol
hevm flatten --source-file src/SimpleAssetManagement.sol --json-file out/dapp.sol.json > out/SimpleAssetManagement-flatt.sol
hevm flatten --source-file src/DiamondExchangeExtension.sol --json-file out/dapp.sol.json > out/DiamondExchangeExtension-flatt.sol
hevm flatten --source-file src/Redeemer.sol --json-file out/dapp.sol.json > out/Redeemer-flatt.sol

################################################################################
# max is 24576
# DATA=$(seth --to-hexdata out/DiamondExchange.bin) && echo $((${#DATA} / 2 - 1))
# DATA=$(seth --to-hexdata out/SimpleAssetManagement.bin) && echo $((${#DATA} / 2 - 1))
################################################################################

# DPT
export dpt=0x10c71515602429c19d53011ea7040b87a4894838

# CDC
cdc=$(dapp create DSToken $(seth --to-bytes32 $(seth --from-ascii CDC)))
echo -e "CDC DEPLOYED AT: $cdc"
seth send $cdc "setName(bytes32)" $(seth --to-bytes32 $(seth --from-ascii CDC))

# ETH feed
export ethPriceFeed=0x729D19f657BD0614b4985Cf1D82531c67569197B # MakerDAO pricefeed address

# DPT feed
export RATE=12
export FEED_VALID=true
dptPriceFeed=$(dapp create TestFeedLike $(seth --to-uint256 $(seth --to-wei $RATE eth)) $FEED_VALID)
echo -e "DPT Price Fedd DEPLOYED AT: $dptPriceFeed"

# CDC feed
export RATE=45
cdcPriceFeed=$(dapp create TestFeedLike $(seth --to-uint256 $(seth --to-wei $RATE eth)) $FEED_VALID)
echo -e "CDC Price Fedd DEPLOYED AT: $cdcPriceFeed"

export liq=$(dapp create Liquidity)
echo -e "Liquiditiy DEPLOYED AT: $liq"
seth send $dpt "transfer(address,uint)" $liq $(seth --to-uint256 $(seth --to-wei 10000 eth))

export wal=$(dapp create Wallet)
echo -e "Wallet DEPLOYED AT: $wal"

burner=$(dapp create Burner "$dpt")
echo -e "Burner DEPLOYED AT: $burner"

export cccc=$(seth --to-bytes32 $(seth --from-ascii "BR,VVS-VS,F-G,0.05"))
export bDcdcName=$(seth --to-bytes32 $(seth --from-ascii DCDC))
dcdc=$(dapp create Dcdc $cccc $bDcdcName 1)
echo -e "DCDC DEPLOYED AT: $dcdc"
seth send $dcdc "setName(bytes32)" $(seth --to-bytes32 $(seth --from-ascii DCDC))

export guard=$(dapp create CdcAuthority)
echo -e "Guard DEPLOYED AT: $guard"

export red=$(dapp create Redeemer)
echo -e "Redeemer DEPLOYED AT: $red"

export dex=$(dapp create DiamondExchange)
echo -e "DiamondExchange DEPLOYED AT: $dex"

export dee=$(dapp create DiamondExchangeExtension)
echo -e "DEE DEPLOYED AT: $dee"

export asm=$(dapp create SimpleAssetManagement)
echo -e "ASM DEPLOYED AT: $asm"

set +x

echo -e "export dpt=$dpt"
echo -e "export cdc=$cdc"
echo -e "export ethPriceFeed=$ethPriceFeed"
echo -e "export dptPriceFeed=$dptPriceFeed"
echo -e "export cdcPriceFeed=$cdcPriceFeed"
echo -e "export liq=$liq"
echo -e "export wal=$wal"
echo -e "export burner=$burner"
echo -e "export dcdc=$dcdc"
echo -e "export guard=$guard"
echo -e "export dex=$dex"
echo -e "export dee=$dee"
echo -e "export asm=$asm"
echo -e "export red=$red"
